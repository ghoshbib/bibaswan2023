<?xml version="1.0" encoding="utf-8"?>

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- These are the default MSBuild Task Projects-->
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>
  <Import Project="$(MSBuildExtensionsPath)\UCLES.MSBuild.Tasks\UCLES.MSBuild.Tasks.proj" />
  <Import Project="$(MSBuildProjectDirectory)\deploy\Azure_DeploymentScripts\dependencies\MSBuild.ExtensionPack.tasks" />
  <Import Project="$(MSBuildProjectDirectory)\Metrica.build.props"/>

  <Target Name="Default" DependsOnTargets="CIBuild" />
  <!-- continuous integration only build - tests will be done by another build task in TC - no deployment files created -->
  <Target Name="CIBuild" DependsOnTargets="Clean;Build" />

  <Target Name="DeploymentBuild"  DependsOnTargets="Clean;Build;Package;CommitArtifacts" />

  <!-- deploy will build code, scripts and create deployment files -->

  <Target Name="Clean" >
    <!-- Clean source tree -->
    <Message Text="Starting to clean %(VSSolution.Identity) files."/>
    <MSBuild Projects="%(VSSolution.Identity)"
         Targets="Clean"
         Properties="Configuration=$(Config)"/>
  </Target>

  <Target Name="Build">
    <Message Text="Versioning Assembly"/>
    <UCLES.MSBuild.Tasks.VersionStamp Version="$(BUILD_NUMBER)" FileVersion="$(BUILD_NUMBER)" File="%(AssemblyInfoForVersioning.Identity)" />

    <MSBuild Projects="%(VSSolution.Identity)" Properties="Configuration=$(Config)"/>
  </Target>

  <Target Name="Package">
    <Message Text="Packaging %(Web.Name)"/>
    <!-- publish web (websites & winservices) to deployment directory -->
    <MSBuild Projects="%(Web.Identity)"
         Targets="ResolveReferences;_CopyWebApplication;_BuiltWebOutputGroupOutput"
         Properties="Configuration=$(Config);WebProjectOutputDir=$(ArtifactsFolder)\%(Web.Name)\;OutDir=$(ArtifactsFolder)\%(Web.Name)\bin\" >
    </MSBuild>

    <Message Text="Packaging %(WinService.Name)"/>
    <!-- publish WinService to deployment directory -->
    <MSBuild Projects="%(WinService.Identity)"
             Properties="Configuration=$(Config);OutputPath=$(ArtifactsFolder)\%(WinService.Name)\">
    </MSBuild>

    <Message Text="Packaging %(WinAdminService.Name)"/>
    <!-- publish WinAdminService to deployment directory -->
    <MSBuild Projects="%(WinAdminService.Identity)"
             Properties="Configuration=$(Config);OutputPath=$(ArtifactsFolder)\%(WinAdminService.Name)\">
    </MSBuild>

    <Message Text="Packaging %(WinBarclaysService.Name)"/>
    <!-- publish WinBarclaysService to deployment directory -->
    <MSBuild Projects="%(WinBarclaysService.Identity)"
             Properties="Configuration=$(Config);OutputPath=$(ArtifactsFolder)\%(WinBarclaysService.Name)\">
    </MSBuild>

    <!-- publish Testing to deployment directory -->
    <MSBuild Projects="%(Testing.Identity)"
             Properties="Configuration=$(Config);OutputPath=$(ArtifactsFolder)\%(Testing.Name)\">
    </MSBuild>

    <!-- publish Metrica services to deployment directory -->
    <Message Text="Packaging %(MetricaServices.Identity)"/>
    <MSBuild Projects="%(MetricaServices.Identity)"
         Targets="Rebuild;_WPPCopyWebApplication"
         Properties="Configuration=$(Config);WebProjectOutputDir=$(ArtifactsFolder)\%(MetricaServices.Name)\;OutDir=$(ArtifactsFolder)\%(MetricaServices.Name)\bin\" >
    </MSBuild>
    <!-- publish Metrica Testdelivery WebSite to deployment directory -->
    <Message Text="Packaging %(MetricaTestDeliverySite.Identity)"/>
    <MSBuild Projects="%(MetricaTestDeliverySite.Identity)"
         Targets="Rebuild;_WPPCopyWebApplication"
         Properties="Configuration=$(Config);WebProjectOutputDir=$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name)\;OutDir=$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name)\bin\" >
    </MSBuild>


    <ItemGroup>
      <FilesToCopy Include="%(web.ProjectPath)bin\wnvinternal.dat"/>
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(ArtifactsFolder)\%(Web.Name)\bin\" />


    <!-- Copy the environment properties to Win Service folder -->
    <MakeDir Directories="$(ArtifactsFolder)\%(WinService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <FilesToCopy Include="%(WinService.WinServiceProjectPath)EnvironmentProperties\**\*;
                              %(WinService.WinServiceProjectPath)app.config.template;
                              %(WinService.WinServiceProjectPath)log4net.config.template"/>
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(ArtifactsFolder)\%(WinService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <TelerikFilesToDelete Include="$(ArtifactsFolder)\%(WinService.Name)\Telerik*" />
    </ItemGroup>
    <Delete Files="@(TelerikFilesToDelete)" />

    <!-- Copy the environment properties to Win Admin Service folder -->
    <MakeDir Directories="$(ArtifactsFolder)\%(WinAdminService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <FilesToCopy Include="%(WinAdminService.WinAdminServiceProjectPath)EnvironmentProperties\**\*;
                              %(WinAdminService.WinAdminServiceProjectPath)app.config.template;
                              %(WinAdminService.WinAdminServiceProjectPath)log4net.config.template"/>
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(ArtifactsFolder)\%(WinAdminService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <TelerikFilesToDelete Include="$(ArtifactsFolder)\%(WinAdminService.Name)\Telerik*" />
    </ItemGroup>
    <Delete Files="@(TelerikFilesToDelete)" />

    <!-- Copy the environment properties to Win Barclays Service folder -->
    <MakeDir Directories="$(ArtifactsFolder)\%(WinBarclaysService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <FilesToCopy Include="%(WinBarclaysService.WinAdminServiceProjectPath)EnvironmentProperties\**\*;
                              %(WinBarclaysService.WinAdminServiceProjectPath)app.config.template;
                              %(WinBarclaysService.WinAdminServiceProjectPath)log4net.config.template"/>
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(ArtifactsFolder)\%(WinBarclaysService.Name)\EnvironmentProperties" />
    <ItemGroup>
      <TelerikFilesToDelete Include="$(ArtifactsFolder)\%(WinBarclaysService.Name)\Telerik*" />
    </ItemGroup>
    <Delete Files="@(TelerikFilesToDelete)" />

    <!-- Remove the Telerik files from projects where they are not necessary -->
    <ItemGroup>
      <TelerikFilesToDelete Include="$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name)\bin\Telerik*" />
    </ItemGroup>
    <Delete Files="@(TelerikFilesToDelete)" />

    <ItemGroup>
      <TelerikFilesToDelete Include="$(ArtifactsFolder)\%(MetricaServices.Name)\bin\Telerik*" />
    </ItemGroup>
    <Delete Files="@(TelerikFilesToDelete)" />


    <!-- zip webs (websites & winservices) -->
    <MSBuild.ExtensionPack.Compression.Zip
		TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(Web.Name)" ZipFileName="$(ArtifactsFolder)\%(Web.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
		TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(WinService.Name)" ZipFileName="$(ArtifactsFolder)\%(WinService.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
		TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(WinAdminService.Name)" ZipFileName="$(ArtifactsFolder)\%(WinAdminService.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
      TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(WinBarclaysService.Name)" ZipFileName="$(ArtifactsFolder)\%(WinBarclaysService.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
      TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(Testing.Name)" ZipFileName="$(ArtifactsFolder)\%(Testing.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
      TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(MetricaServices.Name)" ZipFileName="$(ArtifactsFolder)\%(MetricaServices.Name).zip"/>
    <MSBuild.ExtensionPack.Compression.Zip
      TaskAction="Create" CompressPath="$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name)" ZipFileName="$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name).zip"/>


    <!-- create dbscript to be run manually by dba -->
    <!-- List all the files you want to concatenate -->
    <ItemGroup>
      <DeliveryConcatFiles Include="$(SQLFolderDelivery)\*.sql"/>
      <AdminConcatFiles Include="$(SQLFolderAdmin)\*.sql"/>
    </ItemGroup>

    <!-- Read the contents of the files (preserving tabs/spaces) -->
    <ItemGroup>
      <DeliveryFileContents Include="$([System.IO.File]::ReadAllText(%(DeliveryConcatFiles.Identity)))%0a%0d"/>
      <AdminFileContents Include="$([System.IO.File]::ReadAllText(%(AdminConcatFiles.Identity)))%0a%0d"/>
    </ItemGroup>

    <!-- Write the result to a single temporary file -->
    <WriteLinesToFile File="$(ArtifactsFolder)\dbscriptDelivery.sql" Lines="@(DeliveryFileContents)" Overwrite="true" />
    <WriteLinesToFile File="$(ArtifactsFolder)\dbscriptAdmin.sql" Lines="@(AdminFileContents)" Overwrite="true" />

    <ItemGroup>
      <FilesToZip Include="$(ArtifactsFolder)\*.sql"/>
    </ItemGroup>

    <!-- Creates zip of the consolidated SQL files -->
    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FilesToZip)" RemoveRoot="$(ArtifactsFolder)" ZipFileName="$(ArtifactsFolder)\SQL.zip"/>

    <!-- Deletes temporary SQL files -->
    <Delete Files="$(ArtifactsFolder)\dbscriptAdmin.sql" />
    <Delete Files="$(ArtifactsFolder)\dbscriptDelivery.sql" />

    <!-- zip content of Logic Apps -->
    <ItemGroup>
      <FileToZip Include="$(CreateSpeechSubmission)\**"/>
      <ExcludeFromBuild Include="$(CreateSpeechSubmission)\Build" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(CreateSpeechSubmission)" ZipFileName="$(ArtifactsFolder)\CreateSpeechSubmission.zip"/>

    <ItemGroup>
      <FileToZip Include="$(ELiTSubmission)\**" />
      <ExcludeFromBuild Include="$(ELiTSubmission)\Build" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ELiTSubmission)" ZipFileName="$(ArtifactsFolder)\ELiTSubmission.zip"/>

    <ItemGroup>
      <FileToZip Include="$(GetSpeechSubmissionResult)\**"/>
      <ExcludeFromBuild Include="$(GetSpeechSubmissionResult)\Build" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(GetSpeechSubmissionResult)" ZipFileName="$(ArtifactsFolder)\GetSpeechSubmissionResult.zip"/>

    <ItemGroup>
      <FileToZip Include="$(SubmissionFeedback)\**"/>
      <ExcludeFromBuild Include="$(SubmissionFeedback)\Build" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(SubmissionFeedback)" ZipFileName="$(ArtifactsFolder)\SubmissionFeedback.zip"/>

    <ItemGroup>
      <FileToZip Include="$(SubmitQuestion)\**" Exclude="$(SubmitQuestion)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(SubmitQuestion)" ZipFileName="$(ArtifactsFolder)\SubmitQuestion.zip"/>

    <ItemGroup>
      <FileToZip Include="$(SubmitSpeech)\**" Exclude="$(SubmitSpeech)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(SubmitSpeech)" ZipFileName="$(ArtifactsFolder)\SubmitSpeech.zip"/>

    <ItemGroup>
      <FileToZip Include="$(UpdateSpeechSubmissionStatusInTableStorage)\**" Exclude="$(UpdateSpeechSubmissionStatusInTableStorage)\Build\**" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(UpdateSpeechSubmissionStatusInTableStorage)" ZipFileName="$(ArtifactsFolder)\UpdateSpeechSubmissionStatusInTableStorage.zip"/>

    <ItemGroup>
      <FileToZip Include="$(UpdateStatusInTableStorage)\**" Exclude="$(UpdateStatusInTableStorage)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(UpdateStatusInTableStorage)" ZipFileName="$(ArtifactsFolder)\UpdateStatusInTableStorage.zip"/>

    <ItemGroup>
      <FileToZip Include="$(UpdateSubmitQuestion)\**" Exclude="$(UpdateSubmitQuestion)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(UpdateSubmitQuestion)" ZipFileName="$(ArtifactsFolder)\UpdateSubmitQuestion.zip"/>

    <ItemGroup>
      <FileToZip Include="$(ElitAuditMessages)\**" Exclude="$(ElitAuditMessages)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ElitAuditMessages)" ZipFileName="$(ArtifactsFolder)\ElitAuditMessages.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTErrorHandler)\**" Exclude="$(EliTErrorHandler)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTErrorHandler)" ZipFileName="$(ArtifactsFolder)\EliTErrorHandler.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTNotificationHandler)\**" Exclude="$(EliTNotificationHandler)\Build\**" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTNotificationHandler)" ZipFileName="$(ArtifactsFolder)\EliTNotificationHandler.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTPublishItemNotifier)\**" Exclude="$(EliTPublishItemNotifier)\Build\**" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTPublishItemNotifier)" ZipFileName="$(ArtifactsFolder)\EliTPublishItemNotifier.zip"/>

    <ItemGroup>
      <FileToZip Include="$(ELiTSLAChecker)\**" Exclude="$(ELiTSLAChecker)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ELiTSLAChecker)" ZipFileName="$(ArtifactsFolder)\ELiTSLAChecker.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTSpeechSubmissionNotifier)\**" Exclude="$(EliTSpeechSubmissionNotifier)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTSpeechSubmissionNotifier)" ZipFileName="$(ArtifactsFolder)\EliTSpeechSubmissionNotifier.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTSubmitFeedbackNotifier)\**" Exclude="$(EliTSubmitFeedbackNotifier)\Build\**" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTSubmitFeedbackNotifier)" ZipFileName="$(ArtifactsFolder)\EliTSubmitFeedbackNotifier.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTSubmitSpeechNotifier)\**" Exclude="$(EliTSubmitSpeechNotifier)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTSubmitSpeechNotifier)" ZipFileName="$(ArtifactsFolder)\EliTSubmitSpeechNotifier.zip"/>

    <ItemGroup>
      <FileToZip Include="$(ElitUpdateStateEngine)\**" Exclude="$(ElitUpdateStateEngine)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ElitUpdateStateEngine)" ZipFileName="$(ArtifactsFolder)\ElitUpdateStateEngine.zip"/>

    <ItemGroup>
      <FileToZip Include="$(MetricaExaminerNotificationHourly)\**" Exclude="$(MetricaExaminerNotificationHourly)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(MetricaExaminerNotificationHourly)" ZipFileName="$(ArtifactsFolder)\MetricaExaminerNotificationHourly.zip"/>

    <ItemGroup>
      <FileToZip Include="$(MetricaExaminerNotificationDaily)\**" Exclude="$(MetricaExaminerNotificationDaily)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(MetricaExaminerNotificationDaily)" ZipFileName="$(ArtifactsFolder)\MetricaExaminerNotificationDaily.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTWritingRuleMatchLA)\**" Exclude="$(EliTWritingRuleMatchLA)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTWritingRuleMatchLA)" ZipFileName="$(ArtifactsFolder)\EliTWritingRuleMatchLA.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTWritingResultProcessingLA)\**" Exclude="$(EliTWritingResultProcessingLA)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTWritingResultProcessingLA)" ZipFileName="$(ArtifactsFolder)\EliTWritingResultProcessingLA.zip"/>

	<ItemGroup>
      <FileToZip Include="$(ElitWritingCambridgeOneNotifier)\**" Exclude="$(ElitWritingCambridgeOneNotifier)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ElitWritingCambridgeOneNotifier)" ZipFileName="$(ArtifactsFolder)\ElitWritingCambridgeOneNotifier.zip"/>
	
    <ItemGroup>
      <FileToZip Include="$(SubmitText)\**" Exclude="$(SubmitText)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(SubmitText)" ZipFileName="$(ArtifactsFolder)\SubmitText.zip"/>

    <ItemGroup>
      <FileToZip Include="$(UpdateSubmitTextStatus)\**" Exclude="$(UpdateSubmitTextStatus)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(UpdateSubmitTextStatus)" ZipFileName="$(ArtifactsFolder)\UpdateSubmitTextStatus.zip"/>

    <ItemGroup>
      <FileToZip Include="$(ELiTWritingSLAChecker)\**" Exclude="$(ELiTWritingSLAChecker)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(ELiTWritingSLAChecker)" ZipFileName="$(ArtifactsFolder)\ELiTWritingSLAChecker.zip"/>

    <ItemGroup>
      <FileToZip Include="$(EliTSubmitTextNotifier)\**" Exclude="$(EliTSubmitTextNotifier)\Build\**"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FileToZip)" RemoveRoot="$(EliTSubmitTextNotifier)" ZipFileName="$(ArtifactsFolder)\EliTSubmitTextNotifier.zip"/>
	
    <!-- zip content of Function App -->
    <ItemGroup>
      <FilesToBeZipped Include="$(EliTSpeakingFunctionApp)\**" Exclude= "$(EliTSpeakingFunctionApp)\EliTSpeakingFunctionApp.csproj" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FilesToBeZipped)" RemoveRoot="$(EliTSpeakingFunctionApp)" ZipFileName="$(ArtifactsFolder)\EliTSpeakingFunctionApp.zip"/>

    <ItemGroup>
      <FilesToBeZipped Include="$(ExaminerNotificationFunctionApp)\**" Exclude= "$(ExaminerNotificationFunctionApp)\ExaminerNotificationFunctionApp.csproj" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FilesToBeZipped)" RemoveRoot="$(ExaminerNotificationFunctionApp)" ZipFileName="$(ArtifactsFolder)\ExaminerNotificationFunctionApp.zip"/>

    <ItemGroup>
      <FilesToBeZipped Include="$(EliTWritingFunctionApp)\**" Exclude= "$(EliTWritingFunctionApp)\EliTWritingFunctionApp.csproj" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FilesToBeZipped)" RemoveRoot="$(EliTWritingFunctionApp)" ZipFileName="$(ArtifactsFolder)\EliTWritingFunctionApp.zip"/>
	
	<ItemGroup>
      <FilesToBeZipped Include="$(FetchAppConfigFunctionApp)\**" Exclude= "$(FetchAppConfigFunctionApp)\FetchAppConfigFunctionApp.csproj" />
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create" CompressFiles="@(FilesToBeZipped)" RemoveRoot="$(FetchAppConfigFunctionApp)" ZipFileName="$(ArtifactsFolder)\FetchAppConfigFunctionApp.zip"/>
	
    <!-- clean up deployment folder -->
    <RemoveDir Directories="$(ArtifactsFolder)\%(Web.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(WinService.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(WinAdminService.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(WinBarclaysService.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(Testing.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(MetricaServices.Name)" />
    <RemoveDir Directories="$(ArtifactsFolder)\%(MetricaTestDeliverySite.Name)" />

    <!-- clean up deployment LA -->
    <!--
    <RemoveDir Directories="$(ArtifactsFolder)\$(ELiTSubmission)\Build" />
    <RemoveDir Directories="$(ArtifactsFolder)\$(GetSpeechSubmissionResult)" />-->
  </Target>

  <Target Name="CommitArtifacts" >
    <MSBuild.ExtensionPack.Compression.Zip TaskAction="Create"
                                           CompressPath="$(MSBuildProjectDirectory)\Deploy"
                                           ZipFileName="$(MSBuildProjectDirectory)\$(DeployArchiveFilename)" />
  </Target>

  <Target Name="Test" >
    <ItemGroup>
      <Testingssemblies Include="C:\DotNet\Metrica\1.8\Deploy\Artifacts\Testing\Metrica.Selenium.Test.dll" />
    </ItemGroup>

    <!-- run unit tests-->
    <Message Text="Assemblie to run @(Testingssemblies)"/>
    <NUnit Assemblies="@(Testingssemblies)" ToolPath="C:\Program Files (x86)\NUnit 2.6.3\bin" />
  </Target>

  <Target Name="CodeAnalysisBuild" DependsOnTargets="Clean">
    <MSBuild Projects="%(VSSolution.Identity)" Properties="Configuration=$(Config)"/>
  </Target>



</Project>
